#
# Make.targets for GENIE/Reweight
#
# Author: Costas Andreopoulos <c.andreopoulos \at cern.ch>
#

#
#
PACKAGE_LIB                   = $(LIBNAME)$(GLIBVERSION).$(DllSuf)
PACKAGE_LIB_WITH_PATH         = $(GENIE_REWEIGHT_LIB_PATH)/$(LIBNAME)$(GLIBVERSION).$(DllSuf)
PACKAGE_LIBNOVRS              = $(LIBNAME).$(DllSuf)
PACKAGE_LIBNOVRS_WITH_PATH    = $(GENIE_REWEIGHT_LIB_PATH)/$(LIBNAME).$(DllSuf)
PACKAGE_LIBMACLINK_WITH_PATH  = $(GENIE_REWEIGHT_LIB_PATH)/$(LIBNAME).$(DllLinkSuf)
PACKAGE_LIBNOVRS_WITH_IPATH   = $(GENIE_REWEIGHT_LIB_INSTALLATION_PATH)/$(LIBNAME).$(DllSuf)
PACKAGE_LIBMACLINK_WITH_IPATH = $(GENIE_REWEIGHT_LIB_INSTALLATION_PATH)/$(LIBNAME).$(DllLinkSuf)

PACKAGE_ALL_SOURCES          := $(wildcard *.cxx )
DICTGEN_HEADERS              := $(addsuffix .h, $(basename $(PACKAGE_ALL_SOURCES)))
DICTGEN_OBJECTS              := $(addsuffix .$(ObjSuf), $(basename $(DICTGEN_HEADERS)))
PACKAGE_ALL_SOURCES          := $(PACKAGE_ALL_SOURCES) $(DICTIONARY).cc $(wildcard *.cpp)
PACKAGE_ALL_OBJECTS           = $(addsuffix .$(ObjSuf), $(basename $(PACKAGE_ALL_SOURCES)))
PACKAGE_SOURCES              := $(wildcard *.cxx)
PACKAGE_OBJECTS               = $(addsuffix .$(ObjSuf), $(basename $(PACKAGE_SOURCES)))

PACKAGE_PCM               := $(LIBNAME)_rdict.pcm
PACKAGE_PCM_WITH_PATH     := $(GENIE_REWEIGHT_LIB_PATH)/$(PACKAGE_PCM)
PACKAGE_ROOTMAP           := $(LIBNAME).rootmap
PACKAGE_ROOTMAP_WITH_PATH := $(GENIE_REWEIGHT_LIB_PATH)/$(PACKAGE_ROOTMAP)

LIB_DEPEND=
ifeq ($(strip $(DICTIONARY)),undefined)
  LIB_DEPEND = $(PACKAGE_OBJECTS)
else
  LIB_DEPEND = $(PACKAGE_ALL_OBJECTS)
endif

#
#
rootcint: $(DICTIONARY).o

$(DICTIONARY).cc: LinkDef.h $(DICTGEN_OBJECTS)
	$(RM) $(DICTIONARY).*
	@echo "[package: $(PACKAGE)] Generating ROOT dictionary ..."
ifeq ($(ROOT_MAJOR),6)
        # to make pcm relocatable we have to set it to strip these off
        # lots of possible include paths to try to catch all cases of in situ,
        # installed and re-packages into UPS
	ROOT_INCLUDE_PATH=$(GENIE_REWEIGHT_LIB_PATH):$(GENIE_REWEIGHT)/src:$(GENIE_LIB_PATH):$(GENIE)/src:$(GENIE_REWEIGHT)/src/$(PACKAGE) \
          rootcling -f $(DICTIONARY).cc \
                    -I$(PACKAGE) -IGENIE \
                    -IGENIE/$(PACKAGE) \
                    -I../include -I../include/GENIE \
                    -I../include/GENIE/$(PACKAGE) \
                    -inlineInputHeader \
                    -s $(PACKAGE_LIBNOVRS) \
                  -rml $(PACKAGE_PCM) \
                  -rmf $(PACKAGE_ROOTMAP) \
                  $(ROOT_DICT_GEN_INCLUDES) $(DICTGEN_HEADERS) LinkDef.h
# clean rootmap output up a bit ... (magic?)
# -e "s/\.dylib\.so/\.dylib/g"
#   order matters here
	sed -i.bak \
                     -e "s/_rdict.pcm/.so/g"  \
                     -e "s%^header *%header $(PACKAGE)/%g" \
                     -e "s%$(GENIE_REWEIGHT_LIB_PATH)/%%g" \
             $(PACKAGE_ROOTMAP)
endif

#
#

$(PACKAGE_LIB_WITH_PATH): $(LIB_DEPEND)
	@echo "[package: $(PACKAGE)] Generating shared library ...dictionary=$(DICTIONARY)"
ifeq ($(strip $(DICTIONARY)),undefined)
	$(SOCMD) $(SOFLAGS) $(SOMINF) $(PACKAGE_OBJECTS) $(EXTRA_EXT_LIBS) $(OutPutOpt) $(PACKAGE_LIB_WITH_PATH)
else
	$(SOCMD) $(SOFLAGS) $(SOMINF) $(PACKAGE_ALL_OBJECTS) $(EXTRA_EXT_LIBS) $(OutPutOpt) $(PACKAGE_LIB_WITH_PATH)
	[ ! -f $(PACKAGE_PCM)     ] || $(COPY) $(PACKAGE_PCM)     $(GENIE_REWEIGHT_LIB_PATH)
	[ ! -f $(PACKAGE_ROOTMAP) ] || $(COPY) $(PACKAGE_ROOTMAP) $(GENIE_REWEIGHT_LIB_PATH)
endif

lib: $(PACKAGE_LIB_WITH_PATH)

#
#
lib-link: FORCE
	@echo "[package: $(PACKAGE)] Creating symbolic link to shared library ..."
ifeq ($(strip $(GOPT_ENABLE_DYLIBVERSION)),YES)
	$(SYMLINK) $(PACKAGE_LIB) $(PACKAGE_LIBNOVRS_WITH_PATH)
endif
ifeq ($(strip $(IS_MACOSX)),YES)
	$(SYMLINK) $(PACKAGE_LIB) $(PACKAGE_LIBMACLINK_WITH_PATH)
endif


#
#
install-lib: FORCE
	@echo "[package: $(PACKAGE)] Installing library..."
	[ ! -f $(PACKAGE_LIB_WITH_PATH) ] || $(COPY) $(PACKAGE_LIB_WITH_PATH) $(GENIE_REWEIGHT_LIB_INSTALLATION_PATH)
ifeq ($(strip $(GOPT_ENABLE_DYLIBVERSION)),YES)
	[ ! -f $(PACKAGE_LIB_WITH_PATH) ] || $(SYMLINK) $(PACKAGE_LIB) $(PACKAGE_LIBNOVRS_WITH_IPATH)
endif
ifeq ($(strip $(ARCH)),macosx)
	[ ! -f $(PACKAGE_LIB_WITH_PATH) ] || $(SYMLINK) $(PACKAGE_LIB) $(PACKAGE_LIBMACLINK_WITH_IPATH)
endif
ifeq ($(ROOT_MAJOR),6)
	@echo "[package: $(PACKAGE)] $(PACKAGE_PCM_WITH_PATH) $(PACKAGE_PCM_WITH_PATH) $(GENIE_REWEIGHT_LIB_INSTALLATION_PATH)"
	[ ! -f $(PACKAGE_PCM_WITH_PATH) ]     || $(COPY) $(PACKAGE_PCM_WITH_PATH) $(GENIE_REWEIGHT_LIB_INSTALLATION_PATH)
	[ ! -f $(PACKAGE_ROOTMAP_WITH_PATH) ] || $(COPY) $(PACKAGE_ROOTMAP_WITH_PATH) $(GENIE_REWEIGHT_LIB_INSTALLATION_PATH)
endif

#
#
install-inc: FORCE
	@echo "[package: $(PACKAGE)] Installing headers..."
	$(COPY) *.h $(GENIE_REWEIGHT_INC_INSTALLATION_PATH)/$(PACKAGE)

#
#
purge: FORCE
	$(RM) $(PACKAGE_OBJECTS) *~ core a.out Makefile.temp


#
#
clean: FORCE
	$(RM) *.o *.d *~ core a.out $(GENIE_REWEIGHT_LIB_PATH)/$(LIBNAME)* $(DICTIONARY).* Makefile.temp


#
#
distclean: FORCE
	$(RM) $(GENIE_REWEIGHT_LIB_INSTALLATION_PATH)/$(LIBNAME)*
	$(RM) -rf $(GENIE_REWEIGHT_INC_INSTALLATION_PATH)/$(PACKAGE)
